package unitarios;

import static org.junit.Assert.*;

import org.junit.Test;

import dominio.Cliente;
import excecoes.ExcecaoDeCliente;

public class ClienteTest {

	private String telefone = "2652 7700";
	private String email = "oi@oi.com";
	private String senha = "1234";
	private String nome = "Joao da Silva";
	private String endereco = "Avenida Nilo Pecanha";

	@Test
	public void testCriarCliente(){

		
		try {
			Cliente cliente = Cliente.criarCliente(telefone, nome, email, senha, endereco);
			
			assertNotNull(cliente);
			
			/*Valida os dados inseridos*/
			assertEquals(telefone, cliente.obterTelefone());
			assertEquals(email, cliente.obterEmail());
			assertEquals(senha, cliente.obterSenha());
			assertEquals(nome, cliente.obterNome());
			assertEquals(endereco, cliente.obterEndereco());
			
		} catch (ExcecaoDeCliente e) {
			e.printStackTrace();
		}
	}
	
	@Test(expected = ExcecaoDeCliente.class)
	public void testCriarClienteTelefoneInvalido() throws ExcecaoDeCliente{
		String telefone = "";

		Cliente.criarCliente(telefone, nome, email, senha, endereco);
	}
	
	@Test(expected = ExcecaoDeCliente.class)
	public void testCriarClienteEmailInvalido() throws ExcecaoDeCliente{
		String email = "";

		Cliente.criarCliente(telefone, nome, email, senha, endereco);
	}
	
	@Test(expected = ExcecaoDeCliente.class)
	public void testCriarClienteSenhaInvalido() throws ExcecaoDeCliente{
		String senha = "123";
		
		Cliente.criarCliente(telefone, nome, email, senha, endereco);
	}
	
	@Test(expected = ExcecaoDeCliente.class)
	public void testCriarClienteNomeInvalido() throws ExcecaoDeCliente{

		String nome = null;

		Cliente.criarCliente(telefone, nome, email, senha, endereco);
	}
	
	@Test(expected = ExcecaoDeCliente.class)
	public void testCriarClienteEnderecoInvalido() throws ExcecaoDeCliente{
		String endereco = "";
		
		Cliente.criarCliente(telefone, nome, email, senha, endereco);
	}
	
	@Test
	public void testRealizarAutenticacaoSenhaCorreta(){
		
		try {
			Cliente cliente = Cliente.criarCliente(telefone, nome, email, senha, endereco);
			cliente.realizarAutenticacao(senha);
			
		} catch (ExcecaoDeCliente e) {
			e.printStackTrace();
		}
	}
	
	
	@Test(expected = ExcecaoDeCliente.class)
	public void testRealizarAutenticacaoSenhaIncorreta() throws ExcecaoDeCliente{
	
		Cliente cliente = null;
		
		try {
			cliente = Cliente.criarCliente(telefone, nome, email, senha, endereco);
		} catch (ExcecaoDeCliente e) {
			e.printStackTrace();
		}
		
		cliente.realizarAutenticacao("12345");
	}
	
	
	@Test
	public void testDefinirTelefone(){
		
		String telefone;
		
		Cliente cliente = null;
		
		try {
			cliente = Cliente.criarCliente(this.telefone, nome, email, senha, endereco);
			telefone = "2653 7700";
			cliente.definirTelefone(telefone);
			assertEquals(telefone, cliente.obterTelefone());
			
		} catch (ExcecaoDeCliente e) {
			e.printStackTrace();
		}
	}
	
	@Test(expected = ExcecaoDeCliente.class)
	public void testDefinirTelefoneInvalido() throws ExcecaoDeCliente{
		String telefone = "2652 7700";
		String email = "oi@oi.com";
		String senha = "1234";
		String nome = "Joao da Silva";
		String endereco = "Avenida Nilo Pecanha";
		
		Cliente cliente = null;
		
		cliente = Cliente.criarCliente(telefone, nome, email, senha, endereco);
		telefone = "";
		cliente.definirTelefone(telefone);
	}
	
	@Test
	public void testDefinirEmail(){
		String telefone = "2652 7700";
		String email = "oi@oi.com";
		String senha = "1234";
		String nome = "Joao da Silva";
		String endereco = "Avenida Nilo Pecanha";
		
		Cliente cliente = null;
		
		try {
			cliente = Cliente.criarCliente(telefone, nome, email, senha, endereco);
			email = "oi@gmail.com";
			cliente.definirEmail(email);
			assertEquals(email, cliente.obterEmail());
			
		} catch (ExcecaoDeCliente e) {
			e.printStackTrace();
		}
	}
	
	@Test(expected = ExcecaoDeCliente.class)
	public void testDefinirEmailInvalido() throws ExcecaoDeCliente{
		String telefone = "2652 7700";
		String email = "oi@oi.com";
		String senha = "1234";
		String nome = "Joao da Silva";
		String endereco = "Avenida Nilo Pecanha";
		
		Cliente cliente = null;

		cliente = Cliente.criarCliente(telefone, nome, email, senha, endereco);
		email = "";
		cliente.definirEmail(email);
	}
	
	
	@Test
	public void testDefinirSenha(){
		String telefone = "2652 7700";
		String email = "oi@oi.com";
		String senha = "1234";
		String nome = "Joao da Silva";
		String endereco = "Avenida Nilo Pecanha";
		
		Cliente cliente = null;
		
		try {
			cliente = Cliente.criarCliente(telefone, nome, email, senha, endereco);
			senha = "123456";
			cliente.definirSenha(senha);
			assertEquals(senha, cliente.obterSenha());
			
		} catch (ExcecaoDeCliente e) {
			e.printStackTrace();
		}
	}
	
	@Test(expected = ExcecaoDeCliente.class)
	public void testDefinirSenhaInvalida() throws ExcecaoDeCliente{
		String telefone = "2652 7700";
		String email = "oi@oi.com";
		String senha = "1234";
		String nome = "Joao da Silva";
		String endereco = "Avenida Nilo Pecanha";
		
		Cliente cliente = null;

		cliente = Cliente.criarCliente(telefone, nome, email, senha, endereco);
		senha = "12";
		cliente.definirSenha(senha);
	}
	
	@Test
	public void testDefinirNome(){
		String telefone = "2652 7700";
		String email = "oi@oi.com";
		String senha = "1234";
		String nome = "Joao da Silva";
		String endereco = "Avenida Nilo Pecanha";
		
		Cliente cliente = null;
		
		try {
			cliente = Cliente.criarCliente(telefone, nome, email, senha, endereco);
			nome = "Jose da Silva";
			cliente.definirNome(nome);
			assertEquals(nome, cliente.obterNome());
			
		} catch (ExcecaoDeCliente e) {
			e.printStackTrace();
		}
	}
	
	@Test(expected = ExcecaoDeCliente.class)
	public void testDefinirNomeInvalido() throws ExcecaoDeCliente{
		String telefone = "2652 7700";
		String email = "oi@oi.com";
		String senha = "1234";
		String nome = "Joao da Silva";
		String endereco = "Avenida Nilo Pecanha";
		
		Cliente cliente = null;

		cliente = Cliente.criarCliente(telefone, nome, email, senha, endereco);
		nome = "";
		cliente.definirNome(nome);
	}
	
	@Test
	public void testDefinirEndereco(){
		String telefone = "2652 7700";
		String email = "oi@oi.com";
		String senha = "1234";
		String nome = "Joao da Silva";
		String endereco = "Avenida Nilo Pecanha";
		
		Cliente cliente = null;
		
		try {
			cliente = Cliente.criarCliente(telefone, nome, email, senha, endereco);
			endereco = "Av. Nilo Pecanha";
			cliente.definirEndereco(endereco);
			assertEquals(endereco, cliente.obterEndereco());
			
		} catch (ExcecaoDeCliente e) {
			e.printStackTrace();
		}
	}
	
	@Test(expected = ExcecaoDeCliente.class)
	public void testDefinirEnderecoInvalido() throws ExcecaoDeCliente{
		String telefone = "2652 7700";
		String email = "oi@oi.com";
		String senha = "1234";
		String nome = "Joao da Silva";
		String endereco = "Avenida Nilo Pecanha";
		
		Cliente cliente = null;

		cliente = Cliente.criarCliente(telefone, nome, email, senha, endereco);
		endereco = null;
		cliente.definirNome(endereco);
	}
	
	@Test
	public void testDefinirId(){
		String telefone = "2652 7700";
		String email = "oi@oi.com";
		String senha = "1234";
		String nome = "Joao da Silva";
		String endereco = "Avenida Nilo Pecanha";
		Long id = null;
		
		Cliente cliente = null;
		
		try {
			cliente = Cliente.criarCliente(telefone, nome, email, senha, endereco);
			id = 1l;
			cliente.definirId(id);
			assertEquals(id, cliente.obterId());
			
		} catch (ExcecaoDeCliente e) {
			e.printStackTrace();
		}
	}
	
	@Test(expected = ExcecaoDeCliente.class)
	public void testDefinirIdInvalido() throws ExcecaoDeCliente{
		String telefone = "2652 7700";
		String email = "oi@oi.com";
		String senha = "1234";
		String nome = "Joao da Silva";
		String endereco = "Avenida Nilo Pecanha";
		Long id = null;
		
		Cliente cliente = null;

		cliente = Cliente.criarCliente(telefone, nome, email, senha, endereco);
		id = 0l;
		cliente.definirId(id);
	}
}
