package pizzariaDAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import dominio.Pagamento;
import excecoes.ExcecaoDAO;
import excecoes.ExcecaoDePagamento;

public class PagamentoDAOConcreto implements PagamentoDAO {
	
    private Connection conexao;
    
    
    public PagamentoDAOConcreto() throws ExcecaoDAO {
        conexao = criarConexao();
    }
     
     
    protected Connection criarConexao() throws ExcecaoDAO{
        return ConnectionFactoryConcreto.obterInstancia().obterConexao();
    }
     

	@Override
	public void incluir(Pagamento pagamento) throws ExcecaoDAO,	ExcecaoDePagamento {
	       if(conexao == null)
	            throw new ExcecaoDAO("pagamento_dao.conexao_nao_estabelecida");
	         
	        String sql = "INSERT INTO pizzaria.Pagamento(id_pedido_fk, forma_de_pagamento, valor_recebido) values (?, ?, ?) RETURNING id;";
	        PreparedStatement stmt;
	        ResultSet rs;
	         
	        try {
	            stmt = conexao.prepareStatement(sql);
	             
	            stmt.setString(1, pagamento.obterPedido().obterId());
	            stmt.setString(2, pagamento.obterFormaDePagamento().name());
	            stmt.setFloat(3, pagamento.obterValorRecebido());
	             
	            rs = stmt.executeQuery();
	             
	            if (rs.next()){
	                pizza.definirId(rs.getLong("id"));
	            }
	             
	        } catch (SQLException e) {
	 
	            throw new ExcecaoDAO("pizza_dao.nao_foi_possivel_incluir_a_pizza", e);
	        }
	}

	@Override
	public void buscar(Integer id_pedido) throws ExcecaoDAO, ExcecaoDePagamento {
		
	}


    @Override
    public void encerrarConexao() throws ExcecaoDAO {
        try {
            this.conexao.close();
        } catch (SQLException e) {
            throw new ExcecaoDAO("pagamaneto_dao.nao_foi_possivel_encerrar_a_conexao");
        }  
    }
}
