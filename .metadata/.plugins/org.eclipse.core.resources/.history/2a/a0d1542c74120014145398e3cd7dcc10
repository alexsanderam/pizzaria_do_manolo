package controlador;


import dominio.Cliente;
import dominio.EnumFormaDePagamento;
import dominio.Pagamento;
import dominio.Pedido;
import dominio.Pizza;
import excecoes.ExcecaoDeCliente;
import excecoes.ExcecaoDeItemPedido;
import excecoes.ExcecaoDePagamento;
import excecoes.ExcecaoDePedido;
import excecoes.ExcecaoDePizza;

public class ControladorDominio {

	private static ControladorDominio instancia;
	
	private ControladorDominio(){
		
	}

	public static ControladorDominio obterInstancia(){
		if(instancia == null)
			return new ControladorDominio();
		
		return instancia;
	}
	
	public Cliente novoCliente(String telefone, String email, String senha, String nome, String endereco) throws ExcecaoDeCliente{
		return Cliente.criarCliente(telefone, email, senha, nome, endereco);
	}
	
	public Pizza novaPizza(String nomePizza, String ingredientes, Float preco) throws ExcecaoDePizza{
		return Pizza.criarPizza(nomePizza, ingredientes, preco);
	}
	
	public Pedido novoPedido(Cliente cliente) throws ExcecaoDePedido{
		return Pedido.novoPedido(cliente);
	}
	
	public void incluirPizzaAoPedido(Pedido pedido, Pizza pizza, Integer quantidade) throws ExcecaoDeItemPedido {
		pedido.incluirPizza(pizza, quantidade);
	}
	
	public void removerPizzaDoPedido(Pedido pedido, Pizza pizza) throws ExcecaoDeItemPedido, ExcecaoDePedido {
		pedido.removerPizza(pizza);
	}
	
	public void realizarPagamentoDoPedido(Pedido pedido, Pagamento pagamento) throws ExcecaoDePedido {
		pedido.definirPagamento(pagamento);
	}
	
	public Pagamento novoPagamento(EnumFormaDePagamento formaDePagamento, Float valorRecebido) throws ExcecaoDePagamento{
		return Pagamento.novoPagamento(formaDePagamento, valorRecebido);
	}
	
	
}
